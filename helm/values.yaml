microservice-chart:
  namespace: "idpay"
  nameOverride: ""
  fullnameOverride: ""

  livenessProbe:
    handlerType: httpGet
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 15
    periodSeconds: 10

  readinessProbe:
    handlerType: httpGet
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 15
    periodSeconds: 10

  deployment:
    create: true

  service:
    create: true
    type: ClusterIP
    ports:
      - 8080

  ingress:
    create: true
    path: /idpaypaymentinstrument/(.*)
    servicePort: 8080

  serviceAccount:
    create: false
    annotations: {}
    name: ""

  podAnnotations: {}

  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault

  securityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 10000
    runAsGroup: 10000

  envConfig:
    MONGODB_DBNAME: idpay
    APPLICATIONINSIGHTS_ROLE_NAME: "idpaypaymentinstrument"
    APPLICATIONINSIGHTS_INSTRUMENTATION_LOGGING_LEVEL: "OFF"
    APPLICATIONINSIGHTS_INSTRUMENTATION_MICROMETER_ENABLED: "false"
    APPLICATIONINSIGHTS_PREVIEW_PROFILER_ENABLED: "false"
    PDV_ENCRYPT_SERVICE_CODE: pdv-ms-tokenizer-encrypt
    PDV_DECRYPT_SERVICE_CODE: pdv-ms-tokenizer
    DELETE_PAGINATION_SIZE: "100"
    DELETE_DELAY_TIME: "1000"

  envConfigMapExternals:
    idpay-common:
      TZ: TZ
    rest-client:
      IDPAY_REWARD_URL: idpay-reward-calculator-baseurl
      PM_SERVICE_BASE_URL: pm_service_base_url
      PDV_ENCRYPT_BASE_URL: pdv_decrypt_base_url
      WALLET_URI: idpay_wallet_host
      PDV_DECRYPT_BASE_URL: pdv_decrypt_base_url
    idpay-eventhub-01:
      KAFKA_BINDER_BROKER_ENDPOINT_LIST: kafka_broker
      KAFKA_BINDER_BROKER_ENDPOINT_ERRORS: kafka_broker
      KAFKA_BINDER_BROKER_ENDPOINT_LIST_01: kafka_broker
      KAFKA_PAYMENT_INSTRUMENT_MECHANISM: kafka_sasl_mechanism
      KAFKA_PAYMENT_INSTRUMENT_SECURITY_PROTOCOL: kafka_security_protocol
      KAFKA_TOPIC_RULE_ENGINE: idpay_hpan_update_topic
      KAFKA_TOPIC_RE_ACK: idpay_hpan_update_outcome_topic
      KAFKA_TOPIC_ERRORS: idpay_error_topic
      KAFKA_RE_ACK_GROUP_IN: idpay_hpan_update_outcome_consumer_group
      #KAFKA_TOPIC_COMMANDS: idpay-commands
    rtd-eventhub:
      KAFKA_BINDER_BROKER_ENDPOINT_RTD: kafka_broker_rtd_pi
      KAFKA_TOPIC_RTD_OUT: rtd_pi_from_app_topic
      KAFKA_TOPIC_RTD_IN: rtd_pi_to_app_topic
      KAFKA_RTD_IN_GROUP: rtd_pi_to_app_consumer_group

  envSecret:
    MONGODB_URI: mongodb-connection-string
    KAFKA_RULE_ENGINE_SASL_JAAS_CONFIG: evh-idpay-hpan-update-idpay-hpan-update-producer-jaas-config-idpay-01
    KAFKA_RE_ACK_SASL_JAAS_CONFIG: evh-idpay-hpan-update-outcome-idpay-hpan-update-outcome-consumer-jaas-config-idpay-01
    KAFKA_RTD_OUT_SASL_JAAS_CONFIG: evh-rtd-pi-from-app-rtd-pi-from-app-producer-policy-rtd
    KAFKA_RTD_IN_SASL_JAAS_CONFIG: evh-rtd-pi-to-app-rtd-pi-to-app-consumer-policy-rtd
    KAFKA_ERRORS_SASL_JAAS_CONFIG: evh-idpay-errors-idpay-errors-producer-jaas-config-idpay-01
    KAFKA_COMMANDS_IN_SASL_JAAS_CONFIG: evh-idpay-commands-idpay-commands-consumer-jaas-config-idpay-01
    PDV_ENCRYPT_API_KEY: pdv-api-key
    PDV_DECRYPT_API_KEY: pdv-api-key
    PM_SERVICE_APIM_KEY: pm-api-key

  # nodeSelector: {}

  # tolerations: []

  # affinity: {}
